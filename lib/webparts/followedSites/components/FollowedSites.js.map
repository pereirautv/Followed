{"version":3,"sources":["webparts/followedSites/components/FollowedSites.tsx"],"names":[],"mappings":"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","file":"webparts/followedSites/components/FollowedSites.js","sourcesContent":["import * as React from 'react';\r\nimport styles  from './FollowedSites.module.scss';\r\n//import { IFollowedSitesProps } from './IFollowedSitesProps';\r\n//import { escape } from '@microsoft/sp-lodash-subset';\r\nimport { SPHttpClientResponse, SPHttpClient } from '@microsoft/sp-http';\r\nimport { WebPartTitle } from '@pnp/spfx-controls-react/lib/WebPartTitle';\r\nimport { SortOrder } from '../FollowedSitesWebPart';\r\nimport { Link } from 'office-ui-fabric-react/lib/components/Link';\r\nimport { TextField } from 'office-ui-fabric-react/lib/components/TextField';\r\nimport * as strings from 'FollowedSitesWebPartStrings';\r\nimport { IFollowedSitesProps, IFollowedSitesState, IFollowedResult, IFollowed } from '.';\r\nimport { Paging } from './paging';\r\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\r\n\r\n\r\nexport default class FollowedSites extends React.Component<IFollowedSitesProps, IFollowedSitesState> {\r\n  private _allFollowing: IFollowedResult[] = [];\r\n\r\n  constructor(props: IFollowedSitesProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      following: null,\r\n      allFollowing: [],\r\n      loading: true,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Retrieves all the current user its followed sites\r\n   */\r\n  private async _fetchFollowedSites(): Promise<void> {\r\n    this.setState({\r\n      loading: true,\r\n      error: null\r\n    });\r\n\r\n    // Types 4 === sites\r\n  \r\n    \r\n    const apiUrl = `${this.props.context.pageContext.web.absoluteUrl}/_vti_bin/homeapi.ashx/sites/followed?`;///_api/social.following/my/followed(types=14)      \r\n    this.props.context.spHttpClient.fetch(apiUrl, SPHttpClient.configurations.v1, { //url : _spPageContextInfo.webAbsoluteUrl + \"/_vti_bin/homeapi.ashx/sites/followed?mostRecentFirst=true&start=0&count=100&fillSiteData=true\"\r\n      method: \"GET\",\r\n     \r\n    })\r\n      .then((data: SPHttpClientResponse) => data.json())\r\n      .then((data: IFollowed) => {\r\n        // Check if data was retrieved\r\n        if (data && data.value) {\r\n          let fSites = data.value;\r\n          // Check if items need to be sorted by their name\r\n          if (this.props.sortOrder && this.props.sortOrder === SortOrder.name) {\r\n            fSites = fSites.sort(this._sortByName);\r\n          } else {\r\n            // Last added item is last in the list, so we use reverse to turn it around\r\n            fSites = data.value.reverse();\r\n          }\r\n\r\n          // Locally store the followed site results\r\n          this._allFollowing = [...fSites];\r\n\r\n          // Pass sites to trigger state update\r\n          this._updateFollowingSites(fSites);\r\n        }\r\n\r\n        // Check if an error occured\r\n        if (data && data.error) {\r\n          // Error occured while fetching personal sites\r\n          this.setState({\r\n            loading: false,\r\n            error: strings.error\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.setState({\r\n          loading: false,\r\n          error: strings.error\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Updates the current following site state\r\n   */\r\n  private _updateFollowingSites = (fSites: IFollowedResult[]): void => {\r\n    const allSites = [...fSites];\r\n    // Check if the array has to be limited\r\n    if (this.props.nrOfItems) {\r\n      fSites = fSites.slice(0, this.props.nrOfItems);\r\n    }\r\n\r\n    this.setState({\r\n      following: fSites,\r\n      allFollowing: allSites,\r\n      loading: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sort array by their name\r\n   * @param a First item\r\n   * @param b Second item\r\n   */\r\n  private _sortByName(a: IFollowedResult, b: IFollowedResult): number {\r\n    if (a.Name.toLowerCase() < b.Name.toLowerCase()) return -1;\r\n    if (a.Name.toLowerCase() > b.Name.toLowerCase()) return 1;\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Update the current site results array\r\n   */\r\n  private _updatePagedItems = (pagedItems: IFollowedResult[]): void => {\r\n    if (pagedItems) {\r\n      this.setState({\r\n        following: pagedItems\r\n      });\r\n    }\r\n  }\r\n\r\n  private _onFilterChanged = (event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, val?: string): void => {\r\n    // Check if a value was provided\r\n    if (val) {\r\n      const allSites = [...this._allFollowing];\r\n      const filteredItems = allSites.filter(f => f.Name.toLowerCase().indexOf(val.toLowerCase()) !== -1);\r\n      this._updateFollowingSites(filteredItems);\r\n    } else {\r\n      this._updateFollowingSites(this._allFollowing);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * componentDidMount lifecycle hook\r\n   */\r\n  public componentDidMount(): void {\r\n    this._fetchFollowedSites();\r\n  }\r\n\r\n  /**\r\n   * componentDidUpdate lifecycle hook\r\n   * @param prevProps\r\n   * @param prevState\r\n   */\r\n  public componentDidUpdate(prevProps: IFollowedSitesProps, prevState: IFollowedSitesState): void {\r\n    if (this.props.nrOfItems !== prevProps.nrOfItems ||\r\n      this.props.sortOrder !== prevProps.sortOrder) {\r\n      this._fetchFollowedSites();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Default React render method\r\n   */\r\n  public render(): React.ReactElement<IFollowedSitesProps> {\r\n    return (\r\n      <div className={styles.followedSites}>\r\n        <WebPartTitle displayMode={this.props.displayMode}\r\n          title={this.props.title}\r\n          updateProperty={this.props.updateProperty} />\r\n\r\n        {\r\n          this.state.loading && (\r\n            <Spinner label={strings.loading} size={SpinnerSize.large} />\r\n          )\r\n        }\r\n\r\n        {\r\n          this.state.following ? (\r\n            <div className={styles.list}>\r\n              <div className={styles.filter}>\r\n                <TextField placeholder={strings.SitesFilterLabel}\r\n                  iconProps={{ iconName: 'Filter' }}\r\n                  underlined\r\n                  onChange={this._onFilterChanged} />\r\n              </div>\r\n\r\n              <ul>\r\n                {\r\n                  this.state.following.length > 0 ? (\r\n                    this.state.following.map(follow => (\r\n                      <li key={follow.Id} className={styles.site}>\r\n                        <Link href={follow.Uri} title={follow.Name}>{follow.Name}</Link>\r\n                      </li>\r\n                    ))\r\n                  ) : (\r\n                      <li className={styles.site}>{strings.NoFollowSitesFoundMsg}</li>\r\n                    )\r\n                }\r\n              </ul>\r\n\r\n              <Paging allItems={this.state.allFollowing}\r\n                nrOfItems={this.props.nrOfItems}\r\n                fUpdateItems={this._updatePagedItems} />\r\n            </div>\r\n          ) : (\r\n              !this.state.loading && (\r\n                this.state.error ?\r\n                  <span className={styles.error}>{this.state.error}</span> :\r\n                  <span className={styles.noSites}>{strings.NoFollowedSitesMsg}</span>\r\n              )\r\n            )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}